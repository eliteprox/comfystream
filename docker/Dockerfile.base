ARG BASE_IMAGE=nvidia/cuda:12.8.1-cudnn-devel-ubuntu22.04 \
    PYTHON_VERSION=3.12

FROM "${BASE_IMAGE}"

ARG PYTHON_VERSION

# Set Bash as the default shell
SHELL ["/bin/bash", "-c"]

ENV DEBIAN_FRONTEND=noninteractive \
    PYTHON_VERSION="${PYTHON_VERSION}" \
    SHELL="/bin/bash" \
    UV_PYTHON="${PYTHON_VERSION}" \
    UV_COMPILE_BYTECODE=1 \
    UV_LINK_MODE=copy \
    PATH="/root/.cargo/bin:/root/.local/bin:/usr/local/bin:${PATH}"
    # \
    # VIRTUAL_ENV="/workspace/ComfyUI/.venv" \
    # PYTHONPATH="/workspace/ComfyUI/.venv/lib/python${PYTHON_VERSION}/site-packages"
    # /workspace/ComfyUI/.venv/

# System dependencies
RUN apt update && apt install -yqq --no-install-recommends \
    git wget curl nano socat \
    libsndfile1 build-essential llvm tk-dev \
    libglvnd-dev cmake swig libprotobuf-dev \
    protobuf-compiler libcairo2-dev libpango1.0-dev libgdk-pixbuf2.0-dev \
    libffi-dev libgirepository1.0-dev pkg-config libgflags-dev \
    libgoogle-glog-dev libjpeg-dev libavcodec-dev libavformat-dev \
    libavutil-dev libswscale-dev \
    && rm -rf /var/lib/apt/lists/*

#enable opengl support with nvidia gpu
RUN printf '%s\n' \
  '{' \
  '    "file_format_version" : "1.0.0",' \
  '    "ICD" : {' \
  '        "library_path" : "libEGL_nvidia.so.0"' \
  '    }' \
  '}' > /usr/share/glvnd/egl_vendor.d/10_nvidia.json

# Install uv package manager
RUN curl -LsSf https://astral.sh/uv/install.sh | sh && \
    uv --version

# RUN mkdir -p /workspace/ComfyUI

RUN git clone https://github.com/comfyanonymous/ComfyUI.git /workspace/ComfyUI
RUN git clone https://github.com/Comfy-Org/ComfyUI-Manager.git /workspace/ComfyUI/custom_nodes/ComfyUI-Manager
# Copy only files needed for setup
COPY ./src/comfystream/scripts /workspace/comfystream/src/comfystream/scripts
COPY ./configs /workspace/comfystream/configs

# Copy ComfyStream files into ComfyUI
COPY . /workspace/comfystream
# Install ComfyStream requirements
RUN ln -s /workspace/comfystream /workspace/ComfyUI/custom_nodes/comfystream

# Setup Python environment inside ComfyUI
WORKDIR /workspace/ComfyUI
RUN uv venv .venv --python="${PYTHON_VERSION}"
RUN /workspace/ComfyUI/.venv/bin/python -m ensurepip --upgrade && \
    /workspace/ComfyUI/.venv/bin/python -m pip install -U pip setuptools wheel && \
    /workspace/ComfyUI/.venv/bin/python -m pip --version

# Setup environment variables, install comfy-cli
ENV VIRTUAL_ENV="/workspace/ComfyUI/.venv"
ENV PYTHONPATH="/workspace/ComfyUI/.venv/lib/python${PYTHON_VERSION}/site-packages"
ENV PATH="/workspace/ComfyUI/.venv/bin:/root/.cargo/bin:/root/.local/bin:/usr/local/bin:${PATH}"
RUN uv pip install comfy-cli
RUN uv pip install -r /workspace/ComfyUI/custom_nodes/ComfyUI-Manager/requirements.txt

# Install ComfyUI and ComfyStream using comfy-cli
RUN comfy --skip-prompt set-default /workspace/ComfyUI
RUN comfy --skip-prompt install --nvidia --restore

# Install correct torchaudio version based on torch version
RUN <<-EOF
python -c 'import torch, re, subprocess
torch_version_full = torch.__version__
torch_ver_match = re.match(r"(\d+\.\d+\.\d+)", torch_version_full)
if not torch_ver_match:
    raise ValueError(f"Could not parse torch version from {torch_version_full}")
torch_ver = torch_ver_match.group(1)
cuda_ver_tag = f"cu{torch.version.cuda.replace(".", "")}"
command = [
    "uv", "pip", "install", "--no-deps",
    f"torchaudio=={torch_ver}+{cuda_ver_tag}",
    "--extra-index-url", f"https://download.pytorch.org/whl/{cuda_ver_tag}",
]
subprocess.run(command, check=True)'
EOF


# Install ComfyStream manually
WORKDIR /workspace/ComfyUI/custom_nodes/comfystream
RUN uv pip install -e .
RUN python install.py --workspace /workspace/ComfyUI

# Accept a build-arg that lets CI force-invalidate setup_nodes.py
ARG CACHEBUST=static
ENV CACHEBUST=${CACHEBUST}

# Ensure bash is used by default for interactive shells
ENV BASH_ENV=/root/.bashrc

WORKDIR /workspace/comfystream

ENTRYPOINT ["comfy","launch","--","--listen"]
